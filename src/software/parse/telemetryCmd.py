#!/usr/bin/python3
# -*- coding: utf-8 -*-
# *****************************************************************************/
# * Authors: Joseph Tarango
# *****************************************************************************/
from __future__ import absolute_import, division, print_function, \
    unicode_literals  # , nested_scopes, generators, generator_stop, with_statement, annotations
import sys
import importlib
import os

mapping = {
    0: 'assertdump',
    1: 'FwSideTrace',
    2: 'BlSideTrace',
    3: 'Nlog',
    4: 'dpEventDump',
    5: 'bis',
    6: 'ThermalSensor',
    7: 'smartPowerOnSnapshot',
    8: 'ThermalStats',
    9: 'LLFState',
    10: 'initState',
    11: 'LEDStatus',
    12: 'mNmiMsg',
    13: 'preCoreStatsHolder',
    14: 'coreStatsHolder',
    15: 'mFlowCtl',
    16: 'transportStats',
    17: 'pssDebugTrace',
    18: 'mMiCmdCtx',
    19: 'tapStats',
    20: 'NplCmdStateInfo',
    21: 'mMicp',
    22: 'mMicInfo',
    23: 'mMiEventCtx',
    24: 'mMiEventCtxDisableSecRevChk',
    25: 'mMiEventCtxFwUpdateLock',
    26: 'mMiEvntCtxFwUpd',
    27: 'mCfg',
    28: 'coreInfo',
    29: 'mMiMicpEvent',
    30: 'mMiCmdCfg',
    31: 'mMiNmiEvent',
    32: 'mMiCmdResp',
    33: 'mMiMctrlEvent',
    34: 'mDebugStartTime',
    35: 'mmIoAddr',
    36: 'mMiTapEvents',
    37: 'mNmiMoreTimeDelay',
    38: 'mpDispState',
    39: 'mpProcState',
    40: 'mpState',
    41: 'DefragHistory',
    42: 'Defrag_MissedRelos',
    43: 'Arbiter',
    44: 'DefragInfoSlow',
    45: 'Defrag_DustingQueue',
    46: 'Defrag_LockedQueue',
    47: 'Defrag_WAQueue',
    48: 'Defrag_WearLevelQueue',
    49: 'DefragInfo',
    50: 'Defrag_BandsDoneQueue',
    51: 'Defrag_HistoricDustMixRate',
    52: 'DefragStateCounters',
    53: 'leftOver',
    54: 'Defrag_ForcedReloQ',
    55: 'readLatencyStats',
    56: 'writeLatencyStats',
    57: 'NandDiscovery',
    58: 'fConfigInfoTable',
    59: 'factoryConfig',
    60: 'PliHeader',
    61: 'PliRestoreHeader',
    62: 'PliSaveHeader',
    63: 'PliFooter',
    64: 'PliRestoreFooter',
    65: 'PliSaveFooter',
    66: 'PliRestoreCompleter',
    67: 'bandObjectsExt',
    68: 'mMaster',
    69: 'mSlave',
    70: 'mPacket',
    71: 'mNbm',
    72: 'mCmdProc',
    73: 'mRespProc',
    74: 'mMctrlPacket',
    75: 'mWrReq',
    76: 'mFwDownldMeta',
    77: 'mNvmSubSysHealth',
    78: 'mRdReq',
    79: 'mNvmCtrlHealth',
    80: 'mMctpMsgBldr',
    81: 'mClrCmpCtrlStatus',
    82: 'mCmpCtrlStatus',
    83: 'mFlowCtlStatus',
    84: 'mRunTimeSmbAddress',
    85: 'trimEntriesBuffer',
    86: 'mrr_log',
    87: 'tcm_queues',
    88: 'Stats',
    89: 'mrr_state',
    90: 'WSM_Info',
    91: 'mrr_successDistribution',
    92: 'EnduranceMgr',
    93: 'tll_cache_manager',
    94: 'ReadDisturb',
    95: 'buffer_targets',
    96: 'backEndStats',
    97: 'mrr_AuditTimeMs',
    98: 'nlogBufPool',
    99: 'nlogPoolPliLogs',
    100: 'nlogStat',
    101: 'nlogSelect',
    102: 'nlogPliLogs',
    103: 'nlogPoolPliLogsPtr',
    104: 'nlogEventCounter',
    105: 'nlogPausedNlogs',
    106: 'nlogHostLogPtr',
    107: 'ABT_Stack',
    108: 'fwRevision',
    109: 'mrr_status',
    110: 'PliRestoreState',
    111: 'stackXORRecovery',
    112: 'stackDefrag',
    113: 'stackHalSvc',
    114: 'stackWriteCache',
    115: 'stackXportCmdDisp',
    116: 'stackContextTask',
    117: 'stackSecurityTask',
    118: 'stackServiceTask',
    119: 'stackCoreDispatch',
    120: 'stackXfer',
    121: 'IRQ_Stack',
    122: 'XORinfo',
    123: 'ReadDisturb_MrrNearMissQueue',
    124: 'stackCoreComplete',
    125: 'stackIdle',
    126: 'PliWriteStream',
    127: 'nandReadWriteWorkStack',
    128: 'SYS_Stack',
    129: 'Xor_Hw_Info',
    130: 'HalCpu_ResetStack1',
    131: 'HalCpu_ResetStack2',
    132: 'PliSideTraceCoreDataInAssertDump',
    133: 'pliSideTraceStackDump',
    134: 'PMIC_REGS',
    135: 'nandSyncLock',
    136: 'assertDumpFindGate',
    137: 'assertGate',
    138: 'assertRecoveryGate',
    139: 'burninGate',
    140: 'capChargeGate',
    141: 'cdmEraseGate',
    142: 'correctorGate',
    143: 'cpuifInitGate',
    144: 'cpuifRstGate',
    145: 'dramEccGate',
    146: 'gate',
    147: 'llfEraseGate',
    148: 'llrInitGate',
    149: 'nandPhyRstGate',
    150: 'pliConditionalWriteCompleterGate',
    151: 'pliGate',
    152: 'pliNandQuiesceGate',
    153: 'pliNandResetGate',
    154: 'pliWriteCompleterGate',
    155: 'powerGovGate',
    156: 'preSlowCtxGate',
    157: 'relaySelectSyncGate',
    158: 'startUpGate',
    159: 'temperatureGate',
    160: 'wpGate',
    161: 'xorInitGate',
    162: 'TransIcmdReservedReuseStack',
    163: 'ActiveTaskStackPointer',
    164: 'assertGateUnlock',
    165: 'PliBandEraseState',
    166: 'warmResetGateUnlock',
    167: 'pliSaveState',
    168: 'dm',
    169: 'pssRegs',
    170: 'Xor_DebugLog',
    171: 'pCmdCtxList',
    172: 'dmaDescMsgs',
    173: 'Nei',
    174: 'iCmdPtrList',
    175: 'PsrInfo',
    176: 'nandTrimMgrInfo',
    177: 'band_SeqInfo',
    178: 'mrrventCounters',
    179: 'mrr_refCache',
    180: 'XORRecovery',
    181: 'band_EraseInfo',
    182: 'band_InvalidityInfo',
    183: 'band_LinkedList',
    184: 'band_PageCount',
    185: 'bootProfileDRAM',
    186: 'runningStatus',
    187: 'InternalDataCmdDescPool',
    188: 'band_EbCount',
    189: 'band_StripeCount',
    190: 'xorDebugStats',
    191: 'SlowCtx',
    192: 'bandPweInfo',
    193: 'ProgStream',
    194: 'PrefetchData',
    195: 'SlowCtxDataArray',
    196: 'NandChannelRegsDump',
    197: 'WsmBandAbortLog',
    198: 'band_States',
    199: 'nplFaultInfo',
    200: 'npsRegs',
    201: 'dmtRegs',
    202: 'Replay',
    203: 'band_isCleanBand',
    204: 'band_isDefragLockedForNandError',
    205: 'band_isDefragLockedUntilCtxSave',
    206: 'band_isXorEnabled',
    207: 'InternalDataCmdDescFree',
    208: 'dynamicWindow',
    209: 'fwUpdState',
    210: 'tbufInfo',
    211: 'mrr_audit',
    212: 'capTestInfo',
    213: 'CtxRestoreTime',
    214: 'SystemInfo',
    215: 'mailBoxesToSave',
    216: 'dramEccInfo',
    217: 'LLFFormatProgress',
    218: 'nplMmioInfo',
    219: 'channelTimeout',
    220: 'indConfig',
    221: 'nplErrInfo',
    222: 'SafeShutdownInfo',
    223: 'nplCount',
    224: 'PliCapInfo',
    225: 'InitStateCoreSync',
    226: 'LLFFormatProgressHost',
    227: 'nplCore0Info',
    228: 'nplCore1Info',
    229: 'dmt_register_base',
    230: 'nplTransInfo',
    231: 'PMIC',
    232: 'core0ChildMailboxItem',
    233: 'core1ChildMailboxItem',
    234: 'dlmRegs',
    235: 'dmtDebug0',
    236: 'dmtDebug1',
    237: 'dmtDebug2',
    238: 'REGS_NPL',
    239: 'Xor_DebugLogIndex',
    240: 'NvmeHostInitiatedLogPageHeader',
    241: 'PliSideTracePayload',
    242: 'SpiFlash',
    243: 'PliSideTraceCoreData',
    244: 'pliCriticalSectionStartAddr',
    245: 'pliCoreSpecificFlags',
    246: 'pssExtRegs',
    247: 'nvmeFeatures',
    248: 'bridgeInfo',
    249: 'ERROR_249',
    250: 'BridgeStatus',
    251: 'nplInfoState',
    252: 'NplCQueueState',
    253: 'nplInfo',
    254: 'NplSQueueState',
    255: 'NplMailboxState',
    256: 'NplCQueueRegisters',
    257: 'NplSQueueRegisters',
    258: 'DefragHistoryPart',
    259: 'NLOG_ID',
    260: 'NLOG_TEST',
    261: 'NLOG_TC',
    262: 'NLOG_DEBUG',
    263: 'NLOG_TEMP',
    264: 'NLOG_15M',
    265: 'NLOG_10D',
    266: 'NLOG_HOST',
    267: 'NLOG_BG',
    268: 'NLOG_UNIQUE',
    269: 'NLOG_SYS',
    270: 'NLOG_ERROR',
    271: 'NLOG_PLI',
    272: 'NLOG_IBM',
    273: 'NLOG_STATS',
    274: 'NLOG_TSTATS',
    275: 'NLOG_HFR',
    276: 'NLOG_EHOST',
    277: 'NLOG_WARN',
    278: 'NLOG_RARE',
    279: 'NLOG_THERM',
    280: 'NLOG_MRRf',
    281: 'NLOG_UEC',
    282: 'NLOG_TRIM',
    283: 'NLOG_MRRs',
    284: 'NLOG_NEI',
    285: 'NLOG_DM',
    286: 'NLOG_VAL',
    287: 'NLOG_OPAL',
    288: 'NLOG_IRQ',
    289: 'NplMailboxRegisters',
    290: 'powerGov_Fconfig',
    291: 'pwgSysParam',
    292: 'powerGov_ThrottleCounters',
    293: 'telemetryAPLDataArea1Reserve',
    294: 'telemetryAPLDataArea2Reserve',
    295: 'telemetryAPLDataArea3Reserve',
    296: 'telemetryObjectDAValidation',
    297: 'fConfigStream',
    298: 'SdlSGRB_REGS',
    299: 'SdlCP_REGS',
    300: 'SdlSDMA_RD_RD',
    301: 'SdlSDMA_WR_REGS',
    302: 'SdlLYNX_LINK_REGS',
    303: 'SdlSata_Pal_REGS',
    304: 'SdlSataTransportStateInfo',
    305: 'SdlTransportInfo',
    306: 'SdlSramCmdDescBuff',
    307: 'SdlDramDescBuff',
    308: 'SdliCmdShadowCopies',
    309: 'SdlSectorDmaDescArray',
    310: 'SdlCmdHistoryDepth',
    311: 'SdlInterDeviceCmd',
    312: 'SdlInterDeviceCmdHistory',
    313: 'NLOG_READPIPE_ID',
    314: 'NLOG_READPIPE_TEST',
    315: 'NLOG_READPIPE_TC',
    316: 'NLOG_READPIPE_DEBUG',
    317: 'NLOG_READPIPE_TEMP',
    318: 'NLOG_READPIPE_15M',
    319: 'NLOG_READPIPE_10D',
    320: 'NLOG_READPIPE_HOST',
    321: 'NLOG_READPIPE_BG',
    322: 'NLOG_READPIPE_UNIQUE',
    323: 'NLOG_READPIPE_SYS',
    324: 'NLOG_READPIPE_ERROR',
    325: 'NLOG_READPIPE_PLI',
    326: 'NLOG_READPIPE_IBM',
    327: 'NLOG_READPIPE_STATS',
    328: 'NLOG_READPIPE_TSTATS',
    329: 'NLOG_READPIPE_HFR',
    330: 'NLOG_READPIPE_EHOST',
    331: 'NLOG_READPIPE_WARN',
    332: 'NLOG_READPIPE_RARE',
    333: 'NLOG_READPIPE_THERM',
    334: 'NLOG_READPIPE_MRRf',
    335: 'NLOG_READPIPE_UEC',
    336: 'NLOG_READPIPE_TRIM',
    337: 'NLOG_READPIPE_MRRs',
    338: 'NLOG_READPIPE_NEI',
    339: 'NLOG_READPIPE_DM',
    340: 'NLOG_READPIPE_VAL',
    341: 'NLOG_READPIPE_OPAL',
    342: 'NLOG_READPIPE_IRQ',
    65435: 'telemetryObjectSpecialId',
    65436: 'telemetryObjectIntelVUToc',
    65437: 'telemetryObjectBlockAlignmentPad',
    65438: 'telemetryObjectHIDataBlob',
    65439: 'telemetryObjectIntfHeader',
    65440: 'telemetryObjectHIBlobHeader',
    1000000: 'geom',
    1000010: 'dieMap',
    1000020: 'Pli',
    1000030: 'PliSlice',
    1000040: 'throttle',
    1000050: 'DeviceSelfTestLog',
    1000060: 'LpTransitionLog',
    1000070: 'LpTransitionStatsLog',
    1000080: 'LpConfiguration',
    1000090: 'transportStateInfo',
    1000100: 'NPL_REG_GRB_NPLECTL_R',
    1000110: 'NPL_REG_CSTS_R',
    1000120: 'NPL_REG_CC_R',
    1000130: 'dataLayout',
    1000140: 'channelMap',
    1000150: 'dieDataLog',
    1000160: 'sim',
    1000170: 'eccErrorsLog',
    1000180: 'mediaErrLog',
    1000190: 'SlowCtxRebuild',
    1000200: 'DieOfflineDieStats',
    1000210: 'DieInfoExt',
    1000220: 'smart',
    1000230: 'thermalThrottle',
    1000240: 'powerThrottle',
    1000500: 'nlogBuffers',
    1000510: 'nlog',
    4294967293: 'defaultID',
    4294967294: 'unknownUniqueIdentifier',
}


class TelemetryObjectCommands(object):

    def __init__(self, devObj=None):
        self._devObj = devObj

    def parseTelemetry(self, objectId, inFile=None, projObjFile=None):
        """
        read the Telemetry object
        """
        if not r'%s' % (projObjFile) in os.sys.path:
            print("*" * 40, "inserting...", r'%s' % (projObjFile), "*" * 40)
            os.sys.path.insert(1, r'%s' % (projObjFile))
        scriptContext = (f"from telemetry.parsers.{mapping[objectId]} import {mapping[objectId][0].upper() + mapping[objectId][1:]}")
        exec(scriptContext)
        myObj = eval(f"{(mapping[objectId][0].upper() + mapping[objectId][1:])}()")
        if inFile is not None:
            myObj.from_file(filename=inFile)
        else:
            myObj.from_buf(self._devObj.getReadBuffer())
        return myObj
